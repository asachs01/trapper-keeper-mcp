name: Maintenance

on:
  schedule:
    # Run every Sunday at 00:00 UTC
    - cron: '0 0 * * 0'
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  stale:
    name: Mark Stale Issues and PRs
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/stale@v9
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          stale-issue-message: 'This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs.'
          stale-pr-message: 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs.'
          close-issue-message: 'This issue has been automatically closed due to inactivity.'
          close-pr-message: 'This pull request has been automatically closed due to inactivity.'
          days-before-stale: 60
          days-before-close: 7
          stale-issue-label: 'stale'
          stale-pr-label: 'stale'
          exempt-issue-labels: 'pinned,security,bug'
          exempt-pr-labels: 'pinned,security'

  cleanup-caches:
    name: Cleanup GitHub Actions Caches
    runs-on: ubuntu-latest
    
    steps:
      - name: Cleanup caches
        run: |
          gh extension install actions/gh-actions-cache
          
          echo "Fetching list of cache keys"
          cacheKeys=$(gh actions-cache list -R ${{ github.repository }} | cut -f 1)
          
          ## Setting this to not fail the workflow while deleting cache keys.
          set +e
          for cacheKey in $cacheKeys
          do
              gh actions-cache delete $cacheKey -R ${{ github.repository }} --confirm
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Update pre-commit hooks
        run: |
          pip install pre-commit
          pre-commit autoupdate
          
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update pre-commit hooks'
          title: 'chore: update pre-commit hooks'
          body: |
            This PR updates the pre-commit hooks to their latest versions.
            
            Auto-generated by the maintenance workflow.
          branch: update-pre-commit-hooks
          delete-branch: true

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install safety bandit
          pip install -e .
          
      - name: Run safety check
        run: |
          safety check --json --output safety-report.json || true
          
      - name: Run bandit scan
        run: |
          bandit -r src/ -f json -o bandit-report.json || true
          
      - name: Upload security reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports-${{ github.run_id }}
          path: |
            safety-report.json
            bandit-report.json